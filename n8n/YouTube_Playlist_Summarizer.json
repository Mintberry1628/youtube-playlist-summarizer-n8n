{
  "name": "YouTube Playlist Summarizer",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 1
            }
          ]
        }
      },
      "id": "812226dd-34f0-45d5-8c60-1e426069e09f",
      "name": "Scheduled Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        440,
        540
      ]
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/PLAYLIST + KEY",
        "options": {}
      },
      "id": "5f07bb23-9426-4d6c-93f9-277a6085cf0e",
      "name": "Fetch YouTube Playlist",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        620,
        540
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "items",
        "options": {}
      },
      "id": "02bafcb2-dec8-4b73-b958-4f88a9302c71",
      "name": "Split Multiple Videos",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        820,
        540
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f6f06b39-4936-4819-9bbd-89e948b4b586",
              "name": "=videoId",
              "value": "={{ $json.snippet.resourceId.videoId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "29bb5810-e75f-49ec-ad29-1717dd683b28",
      "name": "Extract Video ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1000,
        540
      ]
    },
    {
      "parameters": {
        "executeOnce": false,
        "command": "=if grep -Fxq \"{{ $json.videoId }}\" /data/scripts/yt_processed_ids.txt; then\n  echo '{\"new\": false, \"videoId\": \"{{ $json.videoId }}\"}'\nelse\n  echo '{\"new\": true, \"videoId\": \"{{ $json.videoId }}\"}'\nfi"
      },
      "id": "57aafb48-c529-407c-b9f1-9111a8446ca3",
      "name": "Check if Video Already Processed",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1180,
        540
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = JSON.parse($json.stdout);\nreturn {\n  json: {\n    videoId: data.videoId,\n    new: data.new\n  }\n};"
      },
      "id": "e947757a-e8ca-4592-b64f-c4f4ac06b365",
      "name": "Parse Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1360,
        540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "82a9be77-f025-44e8-9100-4e3542ba05f1",
              "leftValue": "={{ $json.new }}",
              "rightValue": "=",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d936730e-8237-4ecd-8b1c-14755d212486",
      "name": "Process Only if New",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1520,
        540
      ]
    },
    {
      "parameters": {
        "command": "echo \"[$(date '+%Y-%m-%d %H:%M:%S')] {{$json[\"videoId\"]}} - Summary generated.\" >> /data/scripts/yt_summary_log.txt"
      },
      "id": "6a18b8b3-e010-494d-af7e-b8294acdcf90",
      "name": "Log Processed Video",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1740,
        420
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "executeOnce": false,
        "command": "=echo \"{{ $json.videoId }}\" >> /data/scripts/yt_processed_ids.txt"
      },
      "id": "7c971ee9-3065-43b2-b18b-81ced24f9143",
      "name": "Mark Video as Processed",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1900,
        520
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "executeOnce": false,
        "command": "=/data/scripts/n8n/YouTube_Summarizer/yt-venv/bin/python /data/scripts/n8n/YouTube_Summarizer/yt_transcript.py {{ $json[\"videoId\"] }} http://localhost:5678/webhook/YOUR WEBHOOK"
      },
      "id": "204e987b-4e2d-4836-bcd1-6579705df3e1",
      "name": "Send to Webhook for ChatGPT and Telegram",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2060,
        660
      ]
    },
    {
      "parameters": {},
      "id": "038635bf-c56b-4da8-8caa-fa84838ed254",
      "name": "Error Trigger",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        620,
        760
      ]
    },
    {
      "parameters": {
        "chatId": "YOUR TELEGRAM CHAT ID",
        "text": "=An error occurred in workflow: {{$json[\"workflow\"][\"name\"]}}\nVideo ID (if available): {{$json[\"item\"][\"videoId\"]}}\nError message: {{$json[\"error\"][\"message\"]}}",
        "additionalFields": {}
      },
      "id": "bbb979f6-7e38-4ed4-ba89-b56d9261927a",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        840,
        760
      ],
      "credentials": {
        "telegramApi": {
          "id": "YOUR TELEGRAM API",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Scheduled Trigger": {
      "main": [
        [
          {
            "node": "Fetch YouTube Playlist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch YouTube Playlist": {
      "main": [
        [
          {
            "node": "Split Multiple Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Multiple Videos": {
      "main": [
        [
          {
            "node": "Extract Video ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Video ID": {
      "main": [
        [
          {
            "node": "Check if Video Already Processed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Video Already Processed": {
      "main": [
        [
          {
            "node": "Parse Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Data": {
      "main": [
        [
          {
            "node": "Process Only if New",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Only if New": {
      "main": [
        [
          {
            "node": "Mark Video as Processed",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send to Webhook for ChatGPT and Telegram",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log Processed Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Trigger": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9d7d5cbf-8290-4ec6-a5ba-dfc1b7c6d0de",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "aeb458b20e713d5817b125787f16434360a4842a7df99fb7178135d5cd572fee"
  },
  "id": "EXAMPLE VIDEO ID",
  "tags": []
}